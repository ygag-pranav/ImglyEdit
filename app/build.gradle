plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.protobuf" version '0.9.0'
    id('com.google.firebase.crashlytics')
    id("org.sonarqube") version "3.4.0.2513"
    id "org.jetbrains.kotlin.kapt"
    id 'dagger.hilt.android.plugin'
    //alias(libs.plugins.sentry)
}


task printVersionName {
    doLast {
        println android.defaultConfig.versionName
    }
}
task printVersionCode {
    doLast {
        println android.defaultConfig.versionCode
    }
}

android {
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.yougotagift.YouGotaGiftApp.test"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            versionNameSuffix ".debug(${testBuildVersion})"
        }

    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += "-Xjvm-default=all"
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    namespace 'com.yougotagift.YouGotaGiftApp'

    lint {
        // Turns off checks for the issue IDs you specify.
        disable 'TypographyFractions', 'TypographyQuotes'
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        checkOnly 'NewApi', 'InlinedApi'
        // If set to true, turns off analysis progress reporting by lint.
        quiet true
        // If set to true (default), stops the build if errors are found.
        abortOnError false
        // If set to true, lint only reports errors.
        ignoreWarnings true
        // If set to true, lint also checks all dependencies as part of its analysis.
        // Recommended for projects consisting of an app with library dependencies.
        checkDependencies true
    }
}

hilt {
    enableExperimentalClasspathAggregation = true
}

sonarqube {
    properties {
        property 'sonar.projectName', 'ecom_android_mobile_app'
    }
}

repositories {
    maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
}

dependencies {

    implementation(project(":Personalization"))
    implementation project(path: ':photo_video')

    implementation libs.androidx.constraintlayout
    implementation libs.okhttp3.okhttp
    implementation libs.androidx.paging.runtime.ktx

    //region Glide
    implementation libs.glide
    annotationProcessor libs.glide.compiler
    //end region

    //region Hilt
    implementation(libs.hilt)
    kapt(libs.hilt.compiler)
    //end region

    implementation libs.androidx.appcompat


    implementation libs.accompanist.pager
    implementation libs.accompanist.pager.indicators

    implementation libs.lottie.compose
    implementation libs.lottie

    // Support for Java 8 features
    coreLibraryDesugaring libs.desugar.jdk.libs
}


kapt {
    correctErrorTypes = true
}


protobuf {
    protoc {
        if (osdetector.os == "osx") {
            artifact = "com.google.protobuf:protoc:3.14.0:osx-x86_64"
        } else {
            artifact = "com.google.protobuf:protoc:3.14.0"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
